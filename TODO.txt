-Customize Devise layout for User views, e.g. make "name" field editable via form.

-Regularly check for ingredients that are nearing expiration.
--Dynamic period of time to warn before expiration depending on how many ingredients are going bad.
--e.g. if you have 10 things going bad tomorrow, it's probably too late to cook them all,
  so warn earlier if more stuff.
--Use email and flashes for this?
---Flashes should not go away unless clicked on.

-Hour/minute of the day shouldn't be displayed for expiration dates.
--So should we round to next day, or nearest day?
--What margin to use for rounding?

-Try rails-bootstrap-forms instead of screwing around w/CSS
--Especially relevant to datetime_select form elements each taking up a row (instead of being inline)

-Dumb down views; move code into model/helper methods.

-Validations

-DB
--Indices
--Normalization

-How to manage displaying all times (including select tag options!) in user.timezone,
 but saving all as UTC? (SOLVED)

-Consider client-side solution to timezones
--Low priority since foods usually don't move with people?

-Re-think ingredient input.
--Form should allow user to pick ingredient type (e.g. Beef) and how it's stored separately.
--Controller can then coerce this input into the right ExpirationDate record?
--This might mean a less-flat schema for ExpirationDate data.

-User's ingredients listing should have buttons for edit/delete per-ingredient
--Also consider checkboxes for each entry, with a button to delete selected entries

-For CRUD ops (ex. deleting an ingredient), ensure redirects go back to the page that the command
 was issued from and not the logged in user's page.

-Consider splitting expiration_date records by freezer and fridge durations, so there is a single
 duration fields for each expiration_date.

-Custom expiration_dates
--User can name them e.g. "6 day timer", "grandma's special baclava" and associate it with a custom
  duration.
--These would be associated with users.
--Perhaps also add fixed durations to the expiration_date table like "1 day", "2 days", etc.
--This is another argument for separating expiration_date records by storage,
  e.g. Frozen Baked Rolls with a duration of X days and Refridgerated Baked Rolls with a duration of
  Y days.